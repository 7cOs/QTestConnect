<head>
	<meta name="viewport" content="width=device-width, initial-scale=1">
	<link rel="stylesheet" href="https://www.w3schools.com/w3css/4/w3.css">
	<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">	
	<script type="text/javascript" src="/modules.js"></script>
	<script type="text/javascript">
		var d, ci;
		
		var data = {
			header: {
				title: 'QTestConn',
				desc: 'aufklären #: 2575 - observieren'
			},
			footer: {
				company: 'rege-it solutions, professional llc &copy; 7012'
			}
		};
		
		window.onload = function() { init(); };
	
		function addCi() {
			ci = d.head.parentNode.insertBefore(d.head.parentNode.add('ci'), d.body);
			ci.id = 'ci'; 
			ci.add('layout');
			ci.q('layout').add('contents').add('header').add('contents');
			ci.q('layout contents header contents').add('_title').txt(data.header.title);
			ci.q('layout contents header contents').add('desc').txt(data.header.desc);
			ci.q('layout contents').add('info').txt('ci.contents.info');
			ci.q('layout contents').add('_progress').add('contents').txt('progress');
			
			ci.q('layout contents').add('footer').add('contents');
			ci.q('layout contents footer contents').htm(data.footer.company);
			
			ci.q('layout').add('navigator').add('header').add('contents');
			ci.q('layout navigator header contents').txt('navigator-header');
			ci.q('layout navigator').add('contents').add('info').txt('navigator.contents.info');
			ci.q('layout navigator').add('footer').add('contents').txt('navigator.footer');
			
			setStyle();
		}
	
		function setStyle() {
			var s = q('head').add('style');
			var ss = d.styleSheets[d.styleSheets.length-1];
			ss.insertRule('ci {font-family:arial; font-size:11px;}');
			ss.insertRule('ci layout {height:100%; display:flex; border:solid;}');
			ss.insertRule('ci layout contents {display:flex; flex-direction:column;flex:1;}');
			ss.insertRule('ci layout info {flex:1;}');
			ss.insertRule('ci layout contents _progress contents {text-align:center;padding:7px;}');
			ss.insertRule('ci layout contents footer contents {text-align:center;padding:7px;}');
			ss.insertRule('ci layout navigator {width:21%;border:solid;display:flex;flex-direction:column;}');
			ss.insertRule('ci layout navigator contents info {overflow: scroll;}');
			ss.insertRule('ci layout navigator contents info::-webkit-scrollbar { width: 9px; }', 1);
			ss.insertRule('ci layout navigator contents info::-webkit-scrollbar-track { box-shadow: grey 0px 0px 5px inset; /*border-radius: 10px;*/ }', 2);
			ss.insertRule('ci layout navigator contents info::-webkit-scrollbar-thumb { background: rgb(51, 77, 77); /*border-radius: 10px;*/ }', 3);
			ss.insertRule('ci layout navigator contents info::-webkit-scrollbar-thumb:hover { background: hsl(36, 100%, 50%); }', 4);
			ss.insertRule('ci layout navigator contents info::-webkit-scrollbar-button:vertical:decrement { background: #8bc34a!important; }', 5);
			ss.insertRule('ci layout navigator contents info::-webkit-scrollbar-button:vertical:increment { background: #8bc34a!important; }', 6);
		}

		function build() {
			addCi();
		}
		
		function init() {
			d = document;
			d.title = 'QTestConn - Observations';
			
			q=function( q ) { return d.querySelector( q ); };
			qs=function( q ) { return d.querySelectorAll( q ); };

			// - Hide document body - //
			d.body.style.display = 'none';
			
			Element.prototype.add = function(n) {
				if(typeof(n)== 'object') {
					this.appendChild( n ); 
					n.progen = this;
					return;
				}
				var cmp = d.createElement(n);
				if( cmp.nodeName != 'STYLE' ){ 
					cmp.className = 'cmp';
					with( cmp.style ) {
						if ( n != 'ico' ) {
							// display = 'block';
						}
					}
				}
				// - Store progenitor in child - //
				cmp.progen = this;
				return this.appendChild(cmp);
			};
			
			Element.prototype.q = function( q ) {
				return this.querySelector( q );
			};
			
			Element.prototype.qs = function( q ) {
				return this.querySelectorAll( q );
			};
			
			Element.prototype.clear = function() {
				this.textContent = '';
			};
			
			Element.prototype.show = function( ) {
				this.style.display = '';
			};
			
			Element.prototype.hide = function( ) {
				this.style.display = 'none';
			};	
			
			Element.prototype.txt = function( t ) {
				this.textContent = t;
			};	
			
			Element.prototype.htm = function( h ) {
				this.innerHTML = h;
			};			

			build(); // - Build cI - //
		}			
	</script>
</head>